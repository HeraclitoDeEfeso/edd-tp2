@startuml
hide empty members
hide circle
namespace buscador {
    class Direccion {
    url: str
    Direccion(str)
    es_relativa(Direccion): bool
    }
    class Documento {
    direccion: Direccion
    contenido: HTMLPage
    Documento(Direccion, HTMLPage)
    }
    namespace crawler {
        class Crawler {
        controlador: Control
        dominios: Direccion[1..n]
        direcciones_procesadas: Direccion[0..*]
        direcciones_sin_procesar: Direccion[1..*]
        Crawler(Control, Direccion[1..n])
        detener(): None
        }
    }
    namespace inverted_index {
        class Control {
        map: Tokenizer[1..n]
        reduce: Indexer[1..m]
        documentos: Documento[0..*]
        documentos_sin_procesar: Documento[0..*]
        Control(Tokenizer[1..n], Indexer[1..m])
        procesar_documento(Documento): None
        obtener_indice(str): Indexer
        }
        class Tokenizer {
        obtener_palabras(HTMLPage): str[0..*]
        }
        class Indexer {
        indice: BTree
        agregar_palabra(str, Documento): None
        obtener_documentos(str): Documento[0..*]
        palabras_mayores(str): str[0..*]
        palabras_menores(str): str[0..*]
        }
    }
    namespace btree {
        class BTree
    }
    namespace search {
        class Buscador {
        controlador: Control
        Buscador(Control)
        buscar(str): Documento[0..*]
        busqueda_conjuntiva(str, Documento[0..*]): Documento[0..*]
        busqueda_disjuntiva(str, Documento[0..*]): Documento[0..*]
        busqueda_negativa(str, Documento[0..*]): Documento[0..*]
        }
    }
}
buscador.Direccion -o buscador.Documento
buscador.Direccion <.. buscador.crawler.Crawler
buscador.Documento <.. buscador.crawler.Crawler
buscador.Documento <.. buscador.inverted_index.Control
buscador.Documento <.. buscador.inverted_index.Indexer
buscador.Documento <.. buscador.search.Buscador
buscador.inverted_index.Control --> buscador.inverted_index.Tokenizer
buscador.inverted_index.Control --> buscador.inverted_index.Indexer
buscador.crawler.Crawler -> buscador.inverted_index.Control
buscador.inverted_index.Control <- buscador.search.Buscador
buscador.inverted_index.Indexer *-- buscador.btree.BTree
@enduml